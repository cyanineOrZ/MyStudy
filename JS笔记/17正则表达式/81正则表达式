正则表达式是用于匹配字符串中字符组合的模式，在JavaScript中， 正则表达式也是一个对象

一、定义正则表达式的方法

1、字面量（最常用）
const pattern = /表达式/   //就是正则表达式的字面量


2、构造函数创建
const pattern = new RegExp('表达式')





二、常用方法
pattern.test("String str")  使用正则表达式测试一个字符串中是否含有该规则的字符，如果含有则返回true， 否则返回false

pattern.exec("String str")  使用正则表达匹配一个字符串中是否函数规则里面的字符， 如果含有， 则返回符合规则的片段， 没有则返回null




三、元字符
具有特殊含义的字符
1、边界符
^ 表示以 什么 开头 ，比如
/^1/ 则表示该字符串要以1开头。

$ 表示要以 什么结尾， 比如
/1$/ 则表示要以1作为最后的字符

/^$/ 表示精确匹配
/^1$/ 则表示只能有字符串为1的字符串能通过， 11也不能， 当两个边界符在一起时， 则为精确匹配，中间必须一模一样

2、量词
* 重复0次或无数次
有很多或者没有
/^1*$/ 表示要以1开头和要以1结尾，中间只能由但可以有无数个1存在 比如 11111111111

+ 重复1次或无数次
有很多并且一定有
/^1+$/ 表示要以1开头和要以1结尾， 中间只能由但可以有大于1的数量的1存在 比如 11111111111

? 重复0次或1次
有或者没有
/^1?$/ 表示要以1开头和要以1结尾， 中间的1要么有， 要么没有， 比如 “”则为true 因为没有出现， “1”为true 因为只出现了一次  "11"为true， 我也不知道为啥

{n} 重复出现n次
有且一定为n次
/^1{3}$/ 表示要以1开头和1结尾， 中间只能出现1 并且1只能出现4次， 只有1111可以通过验证

{n,} 重复出现n次或更多次
/^1{3,}$/ 表示要以1开头和1结尾， 中间只能出现1 并且1只能出现3次或更多次， 111， 1111， 11111都可以通过验证

{n,m} 重复出现n次 到 m次之间
/^1{3,5}$/ 表示要以1开头和1结尾， 中间只能出现1 并且1只能出现3次到5次， 111， 1111， 11111都可以通过验证 11, 111111 不能通过验证

3、字符类
[] 匹配字符集集合
只要包含[]中的一个字符就可以
/^[123]{1,2}$/ 表示一定要以 1 2 3 这三个数字中的一个开头， 数字 1 2 3 要在该字符串中出现1到2次， 要以数字1 2 3 中的一个结尾

常用的写法
[a-z] 包含全部小写字母
[A-Z] 包含全部大写字母
[a-zA-Z] 包含全部英文字母
[0-9] 包含全部数字
[a-zA-Z0-9] 包含全部数字和字母
[a-fA-F] 包含a-f的小写字母 和 A-F的大写字母
[0-35-9] 包含0-3的数字， 5-9的数字
[0-9a-fA-F] 用于匹配16进制的字符串
[0-9-_] 包含数字，短横线(减号)和下划线

可以使用多个匹配字符集集合来进行多项匹配
/^[a-e][e-f]{1,2}[0-9]{2,4}&/ 表示要以 a-e之间的小写字母开头，然后跟的字符只能是e-f的小写字母， 并且数量为1-2个， 然后跟的字符只能是任一数字， 并且数字的个数要在2-4个之间 比如 aee123 bff333 cef45就可以通过验证

^ 取反符号(一定要配合[]才能是去翻符号， 否则为边界符)
只要不包含[]里面的全部字符就可以
/[^0-9]/ 不包含数字

. 匹配换行符以外的任意单个字符
/^./ 匹配一个以非换行符开头的字符串

预定义字符-常见的字符集集合的简写方式
\d 表示为数字 相当于 [0-9]
\D 表示为非数字 相当于[^0-9]

\w 任一字母，数字和下划线 相当于[a-zA-Z0-9_]
\W 非\w                 相当于[^a-zA-Z0-9_]

\s 匹配空格(包括换行符，制表符，空格符等) 相当于 [\t\r\n\v\f]
\S 非\s                                相当于 [^\t\r\n\v\f]

\t 换行符

\r 制表符

\n 换行符

\v 



4、修饰符
/表达式/修饰符

常见修饰符
i
该正则表达式忽略大小写
/^hello$/i 该表达式一定要hello 、Hello HELLO等才能通过

g
该正则表达式会进行全局匹配
g的用法在不同的正则表达式方法里面有不同的作用
1、exec

2、test
g修饰符对test方法没有效果

3、match


4、replace
str.replace(/表达式/g, str-replace)
在replace的表达式中使用 g 表示全局匹配 
当不使用 g 时， replace只会匹配第一个符合表达式的字符片段， 使用g 时， replace会匹配字符串里面的全部的符合表达式的字符串片段

5、split


5、运算符
| 或运算符
表示该字符串只要满足这个条件或那个条件就行
/[0-9]|[a-z]/ 字符串中含有数字或小写字母